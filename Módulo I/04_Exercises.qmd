```{=html}
<style>
  body{text-align: justify}
</style>
```

:::: progress
:::: {.progress-bar style="width: 100%;"}
::::
::::

# Lista de Exerc√≠cios ‚Äì M√≥dulo Python B√°sico

---

## üîπ N√≠vel **B√°sico**

Objetivo: Refor√ßar os fundamentos de controle de fluxo, operadores e fun√ß√µes simples.

1. **N√∫mero Positivo ou Negativo**
   Pe√ßa um n√∫mero ao usu√°rio e diga se ele √© positivo, negativo ou zero.

2. **Par ou √çmpar**
   Escreva um programa que receba um n√∫mero inteiro e diga se ele √© par ou √≠mpar.

3. **Contagem de 1 a 10**
   Use `for` para imprimir os n√∫meros de 1 a 10.

4. **Soma dos 100 primeiros n√∫meros inteiros**
   Use `range` e `for` para somar os n√∫meros de 1 a 100. Imprima o resultado.

5. **Fun√ß√£o de Boas-vindas**
   Crie uma fun√ß√£o `saudacao()` que exibe "Bem-vindo ao curso de Python!".

6. **Fun√ß√£o com nome personalizado**
   Modifique a fun√ß√£o anterior para receber o nome do usu√°rio como argumento.

7. **Calculadora de quadrado**
   Crie uma fun√ß√£o que receba um n√∫mero e retorne seu quadrado.

8. **Verificador de m√∫ltiplos de 3**
   Crie um programa que diga se um n√∫mero fornecido √© m√∫ltiplo de 3.

9. **Imprimir apenas pares**
   Use `for` e `if` para imprimir todos os n√∫meros pares entre 1 e 20.

10. **Fun√ß√£o Dobro ou Triplo**
    Escreva uma fun√ß√£o `dobro_ou_triplo(n)` que retorne o dobro de `n` se ele for par e o triplo se for √≠mpar.

---

## üîπ N√≠vel **Intermedi√°rio**

Objetivo: Aplicar fun√ß√µes com argumentos, estruturas condicionais mais complexas e la√ßos aninhados.

11. **Classifica√ß√£o por nota**
    Crie uma fun√ß√£o que recebe uma nota (0 a 10) e classifica como:

* A (9‚Äì10), B (7‚Äì8.9), C (5‚Äì6.9), D (<5)

12. **Calculadora de m√©dia com 3 notas**
    Receba 3 notas em uma fun√ß√£o, calcule a m√©dia e retorne a situa√ß√£o: "Aprovado", "Recupera√ß√£o" ou "Reprovado".

13. **Soma de pares at√© N**
    Crie uma fun√ß√£o que recebe um n√∫mero `n` e retorna a soma de todos os pares de 0 at√© `n`.

14. **Fatorial com `while`**
    Use `while` para calcular o fatorial de um n√∫mero inteiro positivo.

15. **Verificador de n√∫mero primo**
    Implemente a fun√ß√£o `eh_primo(n)` que retorna `True` se for primo.

16. **Senha com tr√™s tentativas**
    Crie um sistema de login com senha fixa. O usu√°rio tem 3 tentativas.

17. **Fun√ß√£o de m√∫ltiplos par√¢metros**
    Crie uma fun√ß√£o que receba dois n√∫meros e diga qual √© o maior (ou se s√£o iguais).

18. **Soma de √≠mpares entre dois n√∫meros**
    Escreva uma fun√ß√£o que receba dois n√∫meros e retorne a soma dos √≠mpares entre eles.

19. **Repeti√ß√£o com interrup√ß√£o (`break`)**
    Crie um la√ßo `while` que solicite n√∫meros at√© o usu√°rio digitar zero. Em seguida, imprima a soma total.

20. **Tabuada com `for`**
    Crie uma fun√ß√£o que recebe um n√∫mero e imprime sua tabuada de 1 a 10.

---

## üîπ N√≠vel **Avan√ßado**

Objetivo: Aplicar racioc√≠nio l√≥gico, aninhamento de estruturas, manipula√ß√£o de strings, listas e modulariza√ß√£o com fun√ß√µes.

21. **Contador de Vogais**
    Crie uma fun√ß√£o que conte o n√∫mero de vogais em uma string, desconsiderando acentua√ß√£o.

22. **Conversor de Temperatura com Valida√ß√£o**
    Crie uma fun√ß√£o que recebe a temperatura e a unidade ("C" ou "F") e converte para a outra escala.

23. **Calculadora com Menu**
    Crie uma fun√ß√£o `calculadora()` com menu de opera√ß√µes b√°sicas (`+`, `-`, `*`, `/`) e entrada de dois n√∫meros.

24. **Analisador de CPF Simples**
    Crie uma fun√ß√£o que verifica se um CPF digitado cont√©m 11 d√≠gitos num√©ricos. (N√£o precisa validar o d√≠gito verificador.)

25. **Fun√ß√£o que inverte uma string**
    Implemente uma fun√ß√£o `inverter_string(s)` que retorna a string invertida.

26. **Verificador de Pal√≠ndromo**
    Crie uma fun√ß√£o que recebe uma palavra e verifica se √© um pal√≠ndromo (ex: ‚Äúradar‚Äù).

27. **Sistema de Notas com Loop Interativo**
    O usu√°rio pode digitar v√°rias notas e a fun√ß√£o s√≥ para quando o usu√°rio digitar "sair". Ao final, imprime a m√©dia.

28. **Simulador de Caixa Eletr√¥nico**
    O usu√°rio digita um valor (m√∫ltiplo de 10) e o programa informa quantas notas de 100, 50, 20 e 10 devem ser entregues.

29. **Senha Forte com Express√µes L√≥gicas**
    Escreva uma fun√ß√£o que verifica se uma senha √© forte:

* m√≠nimo de 8 caracteres, uma letra mai√∫scula, um n√∫mero, um s√≠mbolo.

30. **Gerador de Sequ√™ncia de Fibonacci at√© N**
    Escreva uma fun√ß√£o que recebe um valor `n` e imprime os termos da sequ√™ncia de Fibonacci menores que `n`.

:::: progress
:::: {.progress-bar style="width: 100%;"}
::::
::::